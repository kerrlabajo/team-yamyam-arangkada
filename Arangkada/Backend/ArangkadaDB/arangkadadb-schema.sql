/*
Deployment script for ArangkadaDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "ArangkadaDB"
:setvar DefaultFilePrefix "ArangkadaDB"
:setvar DefaultDataPath "/var/opt/mssql/data/"
:setvar DefaultLogPath "/var/opt/mssql/data/"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating database $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET TEMPORAL_HISTORY_RETENTION ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating SqlTable [dbo].[Driver]...';


GO
CREATE TABLE [dbo].[Driver] (
    [Id]             INT            IDENTITY (1, 1) NOT NULL,
    [FullName]       NVARCHAR (100) NOT NULL,
    [Address]        NVARCHAR (100) NOT NULL,
    [ContactNumber]  NVARCHAR (20)  NOT NULL,
    [LicenseNumber]  NVARCHAR (50)  NOT NULL,
    [ExpirationDate] NVARCHAR (20)  NOT NULL,
    [DLCodes]        NVARCHAR (100) NOT NULL,
    [OperatorId]     INT            NOT NULL,
    [VehicleId]      INT            NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating SqlTable [dbo].[Operator]...';


GO
CREATE TABLE [dbo].[Operator] (
    [Id]               INT            IDENTITY (1, 1) NOT NULL,
    [FullName]         NVARCHAR (100) NOT NULL,
    [Username]         NVARCHAR (100) NOT NULL,
    [Password]         NVARCHAR (100) NOT NULL,
    [Email]            NVARCHAR (100) NOT NULL,
    [IsVerified]       BIT            NULL,
    [VerificationCode] NVARCHAR (50)  NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating SqlTable [dbo].[Transaction]...';


GO
CREATE TABLE [dbo].[Transaction] (
    [Id]         INT           IDENTITY (1, 1) NOT NULL,
    [Amount]     FLOAT (53)    NOT NULL,
    [Date]       NVARCHAR (20) NOT NULL,
    [OperatorId] INT           NOT NULL,
    [DriverId]   INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating SqlTable [dbo].[Vehicle]...';


GO
CREATE TABLE [dbo].[Vehicle] (
    [Id]          INT           IDENTITY (1, 1) NOT NULL,
    [CRNumber]    NVARCHAR (50) NOT NULL,
    [PlateNumber] NVARCHAR (50) NOT NULL,
    [BodyType]    NVARCHAR (50) NOT NULL,
    [Make]        NVARCHAR (50) NOT NULL,
    [RentFee]     FLOAT (53)    NOT NULL,
    [RentStatus]  BIT           NOT NULL,
    [OperatorId]  INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating SqlDefaultConstraint unnamed constraint on [dbo].[Operator]...';


GO
ALTER TABLE [dbo].[Operator]
    ADD DEFAULT 0 FOR [IsVerified];


GO
PRINT N'Creating SqlForeignKeyConstraint [dbo].[FK_DriverOperator]...';


GO
ALTER TABLE [dbo].[Driver]
    ADD CONSTRAINT [FK_DriverOperator] FOREIGN KEY ([OperatorId]) REFERENCES [dbo].[Operator] ([Id]);


GO
PRINT N'Creating SqlForeignKeyConstraint [dbo].[FK_DriverVehicle]...';


GO
ALTER TABLE [dbo].[Driver]
    ADD CONSTRAINT [FK_DriverVehicle] FOREIGN KEY ([VehicleId]) REFERENCES [dbo].[Vehicle] ([Id]);


GO
PRINT N'Creating SqlForeignKeyConstraint [dbo].[FK_TransactionDriver]...';


GO
ALTER TABLE [dbo].[Transaction]
    ADD CONSTRAINT [FK_TransactionDriver] FOREIGN KEY ([DriverId]) REFERENCES [dbo].[Driver] ([Id]);


GO
PRINT N'Creating SqlForeignKeyConstraint [dbo].[FK_TransactionOperator]...';


GO
ALTER TABLE [dbo].[Transaction]
    ADD CONSTRAINT [FK_TransactionOperator] FOREIGN KEY ([OperatorId]) REFERENCES [dbo].[Operator] ([Id]);


GO
PRINT N'Creating SqlForeignKeyConstraint [dbo].[FK_VehicleOperator]...';


GO
ALTER TABLE [dbo].[Vehicle]
    ADD CONSTRAINT [FK_VehicleOperator] FOREIGN KEY ([OperatorId]) REFERENCES [dbo].[Operator] ([Id]);


GO
PRINT N'Creating SqlProcedure [dbo].[spPopulateTables]...';


GO
CREATE PROCEDURE spPopulateTables
AS
BEGIN
    -- Drop all foreign key constraints and truncate Transaction table because it is the grandchild table.
    IF EXISTS(SELECT * FROM [dbo].[Transaction])
	    ALTER TABLE [dbo].[Transaction]
	    DROP CONSTRAINT IF EXISTS FK_TransactionOperator

        ALTER TABLE [dbo].[Transaction]
	    DROP CONSTRAINT IF EXISTS FK_TransactionDriver

    IF EXISTS(SELECT * FROM [dbo].[Driver])
	    ALTER TABLE [dbo].[Driver]
	    DROP CONSTRAINT IF EXISTS FK_DriverVehicle

        ALTER TABLE [dbo].[Driver]
        DROP CONSTRAINT IF EXISTS FK_DriverOperator
        TRUNCATE TABLE [dbo].[Transaction]

    -- Truncate Driver, Vehicle, and Operator tables after dropping all foreign key constraints.
    IF EXISTS(SELECT * FROM [dbo].[Driver])
		TRUNCATE TABLE [dbo].[Driver]   

    IF EXISTS(SELECT * FROM [dbo].[Vehicle])
        TRUNCATE TABLE [dbo].[Vehicle];

    IF EXISTS(SELECT * FROM [dbo].[Operator])
        TRUNCATE TABLE [dbo].[Operator];

    -- Insert sample data into Operator table
    SET IDENTITY_INSERT [dbo].[Operator] ON
    INSERT INTO [dbo].[Operator] ([Id], [FullName], [Username], [Password], [Email], [IsVerified])
    VALUES
        (1, 'Operator 1', 'operator1', 'pass1', 'operator1@example.com', 1),
        (2, 'Operator 2', 'operator2', 'pass2', 'operator2@example.com', 1),
        (3, 'Operator 3', 'operator3', 'pass3', 'operator3@example.com', 1),
        (4, 'Operator 4', 'operator4', 'pass4', 'operator4@example.com', 1),
        (5, 'Operator 5', 'operator5', 'pass5', 'operator5@example.com', 1);
    SET IDENTITY_INSERT [dbo].[Operator] OFF

    -- Insert sample data into Vehicle table
    SET IDENTITY_INSERT [dbo].[Vehicle] ON
    INSERT INTO [dbo].[Vehicle] ([Id], [CRNumber], [PlateNumber], [BodyType], [Make], [RentFee], [RentStatus], [OperatorId])
    VALUES
        (1, 'CR0001', 'AAA1234', 'Sedan', 'Toyota', 1000.00, 0, 1),
        (2, 'CR0002', 'BBB5678', 'SUV', 'Honda', 1500.00, 1, 2),
        (3, 'CR0003', 'CCC9012', 'Truck', 'Ford', 2000.00, 0, 1),
        (4, 'CR0004', 'DDD3456', 'Van', 'Nissan', 1800.00, 1, 2),
        (5, 'CR0005', 'EEE7890', 'Sports', 'Mazda', 3000.00, 0, 3),
        (6, 'CR0006', 'FFF1234', 'Sedan', 'Hyundai', 1050.00, 0, 4),
        (7, 'CR0007', 'GGG5678', 'SUV', 'Mitsubishi', 1550.00, 1, 3),
        (8, 'CR0008', 'HHHH9012', 'Truck', 'Lexus', 2540.00, 0, 4),
        (9, 'CR0009', 'III456', 'Van', 'Toyota', 1950.00, 1, 5),
        (10, 'CR0010', 'JJJ7890', 'Sports', 'Nissan', 3250.00, 0, 5);
    SET IDENTITY_INSERT [dbo].[Vehicle] OFF

    -- Insert sample data into Driver table
    SET IDENTITY_INSERT [dbo].[Driver] ON
    INSERT INTO [dbo].[Driver] ([Id], [FullName], [Address], [ContactNumber], 
    [LicenseNumber], [ExpirationDate], [DLCodes], [OperatorId], [VehicleId])
    VALUES
        (1, 'John Smith', '123 Main St', '123-456-7890', 'L123456', '2025-01-01', 'A,B,C', 1, null),
        (2, 'Jane Doe', '456 Oak St', '234-567-8901', 'L234567', '2024-12-31', 'A,B', 1, null),
        (3, 'Michael Johnson', '789 Pine St', '345-678-9012', 'L345678', '2026-05-15', 'A,C,D', 2,2),
        (4, 'Emily Brown', '321 Elm St', '456-789-0123', 'L456789', '2027-07-30', 'B,C', 2,4),
        (5, 'Daniel Williams', '654 Maple St', '567-890-1234', 'L567890', '2023-11-25', 'A,D', 3, null),
        (6, 'Adrian Barcelona', '789 Jade St', '953-751-8436', 'L906592', '2022-012-13', 'A,B,C', 3,7),
        (7, 'Neil Paras', '852 Strawberry St', '548-956-8451', 'L145635', '2027-06-01', 'A,B', 4, null),
        (8, 'Lebrong James', '588 Lakers St', '626-194-5484', 'L997955', '2023-04-04', 'A,C,D', 4, null),
        (9, 'Emily Pink', '321 Pink St', '634-516-4868', 'L456789', '2027-07-30', 'B,C', 5, 9),
        (10,'Steph Curry Concentrate', '768 Golden St.', '215-848-6254', 'L123958', '2025-05-19', 'A,D', 5, null),
        (11,'Steph Curry Powder', '768 Golden St.', '215-848-6254', 'L123958', '2025-05-19', 'A,D', 1,null),
        (12,'Giannis Atatakoumpo', '429 Milwaukee St.', '953-858-8484', 'L612822', '2023-09-05', 'A,D', 3, null);

    SET IDENTITY_INSERT [dbo].[Driver] OFF

    -- Insert sample data into Transaction table
    SET IDENTITY_INSERT [dbo].[Transaction] ON
    INSERT INTO [dbo].[Transaction] ([Id], [Amount], [Date], [OperatorId], [DriverId])
    VALUES
        (1, 1000.00, '2023-05-01', 1, 1),
        (2, 1500.00, '2023-05-02', 1, 2),
        (3, 2000.00, '2023-05-03', 3, 5),
        (4, 1800.00, '2023-05-04', 4, 7),
        (5, 3000.00, '2023-05-05', 4, 8),
        (6, 1200.00, '2023-05-06', 5, 10);    
   SET IDENTITY_INSERT [dbo].[Transaction] OFF
END;
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

SET ANSI_PADDING ON

EXEC spPopulateTables;

SET ANSI_PADDING OFF
GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
